#utility to crop a single file.  
#output filename is autogenerated but indicative of perameters used. 
"""
Copyright 2023 OpenOrigins 2023

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated 
documentation files (the “Software”), to deal in the Software without restriction, including without limitation the 
rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit 
persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the 
Software.

THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR 
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR 
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

"""


from PIL import Image
import os
import sys

def crop_image(input_image_path, output_directory, x=None, y=None, width=None, height=None, percentage=None):
    original_image = Image.open(input_image_path)
    original_width, original_height = original_image.size

    if x is not None and y is not None and width is not None and height is not None:
        # Crop based on specified coordinates and dimensions
        cropped_image = original_image.crop((x, y, x + width, y + height))
        output_filename = f"cropped_{os.path.basename(input_image_path)}_{x}_{y}_{width}x{height}.jpg"
    elif percentage is not None:
        # Crop based on percentage of the image's center
        center_x = original_width // 2
        center_y = original_height // 2

        crop_width = int(original_width * percentage / 100)
        crop_height = int(original_height * percentage / 100)

        left = max(0, center_x - crop_width // 2)
        upper = max(0, center_y - crop_height // 2)
        right = min(original_width, left + crop_width)
        lower = min(original_height, upper + crop_height)

        cropped_image = original_image.crop((left, upper, right, lower))
        output_filename = f"cropped_{os.path.basename(input_image_path)}_{percentage}percent.jpg"
    else:
        print("Error: Specify either coordinates and dimensions or a percentage.")
        sys.exit(1)

    # Create output directory if it doesn't exist
    os.makedirs(output_directory, exist_ok=True)

    # Save the cropped image
    output_path = os.path.join(output_directory, output_filename)
    cropped_image.save(output_path)
    print(f"Image cropped and saved to {output_path}.")

if __name__ == "__main__":
    if len(sys.argv) < 3:
        print("Usage: python crop.py <input_image_path> <output_directory> [x] [y] [width] [height]  OR\n       python crop.py <input_image_path> <output_directory> [percentage]")
        sys.exit(1)

    input_image_path = sys.argv[1]
    output_directory = sys.argv[2]

    x, y, width, height, percentage = None, None, None, None, None

    if len(sys.argv) == 7:
        x = int(sys.argv[3])
        y = int(sys.argv[4])
        width = int(sys.argv[5])
        height = int(sys.argv[6])
    elif len(sys.argv) == 4 and sys.argv[3].endswith("%"):
        percentage = float(sys.argv[3].strip("%"))
    else:
        print("Error: Invalid arguments.")
        sys.exit(1)

    crop_image(input_image_path, output_directory, x=x, y=y, width=width, height=height, percentage=percentage)
